import os; folder=os.path.realpath(os.path.dirname(__file__))
import sys; sys.path.append(os.path.join(folder, '..', '..'))

import common

from buildbot.plugins import buildslave, schedulers, steps, util
from buildbot.schedulers import forcesched
from buildbot.status import html
from buildbot.status.web import authz

cybertron=common.cybertron(os.path.join(folder, '..', '..'))

def devastator_dir():
	return os.path.join(folder, '..', '..', 'devastator')

@util.renderer
def constructicon_dir(properties):
	return os.path.join(devastator_dir(), 'constructicons', common.repo_url_to_name(properties['constructicon_repo_url']))

factory=util.BuildFactory()
factory.addSteps([
	common.sane_step(steps.SetProperty,
		property='git_state',
		value=common.git_state(),
	),
	common.sane_step(steps.Git,
		doStepIf=lambda step: step.build.getProperty('constructicon_repo_url'),
		workdir=constructicon_dir,
		repourl=util.Property('constructicon_repo_url'),
		branch=util.Property('constructicon_branch'),
		mode='full',
		method='fresh',
	),
	common.sane_step(steps.ShellCommand,
		command=['python', 'construct.py'],
		workdir=devastator_dir(),
	),
	common.sane_step(steps.ShellCommand,
		command=['python', 'go.py', 'dr'],
		workdir=os.path.join(folder, '..', '..'),
	),
])

slave_name='megatron-slave'
builder_name='megatron-builder'

BuildmasterConfig={
	'db': {'db_url': 'sqlite:///state.sqlite'},
	'slaves': [buildslave.BuildSlave(slave_name, common.password)],
	'protocols': {'pb': {'port': cybertron['megatron_slave_port']}},
	'builders': [util.BuilderConfig(name=builder_name, slavenames=[slave_name], factory=factory)],
	'schedulers':[schedulers.ForceScheduler(
		name='megatron-force',
		builderNames=[builder_name],
		codebases=[forcesched.CodebaseParameter(
			'',
			branch=util.FixedParameter(name='branch', default=''),
			revision=util.FixedParameter(name='revision', default=''),
			repository=util.FixedParameter(name='repository', default=''),
			project=util.FixedParameter(name='project', default='')
		)],
		properties=[
			util.StringParameter(name='constructicon_repo_url', label='repo URL', default=''),
			util.StringParameter(name='constructicon_branch', label='branch'),
		]
	)],
	'status': [html.WebStatus(cybertron['megatron_master_port'], authz=authz.Authz(
		view=True,
		forceBuild=True,
		forceAllBuilds=True,
		pingBuilder=True,
		stopBuild=True,
		stopAllBuilds=True,
		cancelPendingBuild=True,
		cancelAllPendingBuilds=True,
		stopChange=True,
		showUsersPage=True
	))],
	'mergeRequests': False,
	'debugPassword': 'sesame',
	'title': 'megatron {}'.format(common.git_state()),
}
