import os; folder=os.path.realpath(os.path.dirname(__file__))
import sys; sys.path.append(os.path.join(folder, '..', '..'))

import common

from buildbot.plugins import buildslave, schedulers, steps, util
from buildbot.status import html
from buildbot.status.web import authz

with open(os.path.join(folder, '..', '..', 'cybertron.py')) as file: cybertron=eval(file.read())

def devastator_dir():
	return os.path.join(folder, '..', '..', 'devastator')

@util.renderer
def constructicon_dir(properties):
	return os.path.join(devastator_dir(), 'constructicons', common.repo_url_to_name(properties['repo_url']))

factory=util.BuildFactory()
factory.addStep(steps.Git(repourl=util.Property('repo_url'), workdir=constructicon_dir))
factory.addStep(steps.ShellCommand(command=['python', 'construct.py'], workdir=devastator_dir()))
factory.addStep(steps.ShellCommand(command=['buildbot', 'restart'], workdir=os.path.join(devastator_dir(), 'master')))

slave_name='megatron-slave'
builder_name='megatron-builder'

BuildmasterConfig={
	'db': {'db_url': 'sqlite:///state.sqlite'},
	'slaves': [buildslave.BuildSlave(slave_name, common.password)],
	'protocols': {'pb': {'port': cybertron['megatron_slave_port']}},
	'builders': [util.BuilderConfig(name=builder_name, slavenames=[slave_name], factory=factory)],
	'schedulers':[schedulers.ForceScheduler(
		name='megatron-force',
		builderNames=[builder_name],
		properties=[util.StringParameter(name='repo_url', label='repo URL')]
	)],
	'status': [html.WebStatus(cybertron['megatron_master_port'], authz=authz.Authz(
		view=True,
		forceBuild=True,
		forceAllBuilds=True,
		pingBuilder=True,
		stopBuild=True,
		stopAllBuilds=True,
		cancelPendingBuild=True,
		cancelAllPendingBuilds=True,
		stopChange=True,
		showUsersPage=True
	))],
	'title': 'megatron',
}
